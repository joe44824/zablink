- name: Print role_path
  debug:
    msg: "Role path is {{ role_path }}"

- name: Ensure the destination directory exists on the remote host
  file:
    path: "/tmp/ansible_output"
    state: directory
    mode: '0755'

- name: Check if host is reachable
  ping:
  register: ping_result

- name: Save result if host is reachable
  copy:
    content: |
      {
        "hostname": "{{ ansible_facts.hostname }}",
        "uptime_seconds": "{{ ansible_facts.uptime_seconds }}",
        "bios_date": "{{ ansible_facts.bios_date }}",
        "os_version": "{{ ansible_facts.distribution }} {{ ansible_facts.distribution_version }}",
        "ip": "{{ ansible_host }}"
      }
    dest: "/tmp/ansible_output/system_info_reachable.json"
  when: ping_result.ping is defined and ping_result.ping == 'pong'

- name: Get all IPv4 addresses from ansible facts
  set_fact:
    all_ipv4: "{{ ansible_all_ipv4_addresses | default([]) }}"

- name: Filter private IPv4 addresses
  set_fact:
    private_ips: >-
      {{
        all_ipv4 | select("match", "^(10\\.|172\\.(1[6-9]|2[0-9]|3[0-1])\\.|192\\.168\\.)") | list
      }}

- name: Print private IPv4 addresses
  debug:
    msg: "Private IPv4 addresses for {{ inventory_hostname }}: {{ private_ips }}"
  when: private_ips | length > 0

- name: Print message if no private IPv4 addresses found
  debug:
    msg: "No private IPv4 addresses found for {{ inventory_hostname }}"
  when: private_ips | length == 0


- name: Save result if host is unreachable
  copy:
    content: |
      {
        "hostname": null,
        "uptime_seconds": null,
        "bios_date": null,
        "os_version": null,
        "status": "Host unreachable",
        "ip": "{{ ansible_host }}"
      }
    dest: "/tmp/ansible_output/system_info_unreachable.json"
  when: ping_result.ping is not defined or ping_result.ping != 'pong'


- name: Fetch reachable result to the control node
  fetch:
    src: "/tmp/ansible_output/system_info_reachable.json"
    dest: "./host_facts/reachable/{{ inventory_hostname }}.json"
    flat: yes
  when: ping_result.ping is defined and ping_result.ping == 'pong'

- name: Fetch unreachable result to the control node
  fetch:
    src: "/tmp/ansible_output/system_info_unreachable.json"
    dest: "./host_facts/unreachable/{{ inventory_hostname }}.json"
    flat: yes
  when: ping_result.ping is not defined or ping_result.ping != 'pong'
